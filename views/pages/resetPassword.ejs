<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <style>@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap');

    /* CSS variables */
    :root {
        --success-color: #2ecc71;
        --error-color:#e74c3e;
    }
    
    
    * {
        box-sizing: border-box;
    }
    
    
    body {
        background-color: #f9fafb;
        font-family: 'Open Sans', sans-serif;
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        margin: 0;
      }
    .container {
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
        width: 400px;
    }
      
    h2 {
        text-align: center;
        margin: 0 0 20px;
    }
    .form {
        /* Top & Bottom = 30px, Left & right = 40px */
        padding: 30px 40px;
    }
    
    
    .form-control {
        margin-bottom: 10px;
        padding-bottom: 20px;
        position: relative;
      }
      
      .form-control label {
        color: #777;
        display: block;
        margin-bottom: 5px;
      }
      
      .form-control input {
        border: 2px solid #f0f0f0;
        border-radius: 4px;
        display: block;
        width: 100%;
        padding: 10px;
        font-size: 14px;
      }
      
      .form-control input:focus {
        outline: 0;
        border-color: #777;
      }
      
      .form-control.success input {
        border-color: var(--success-color);
      }
      
      .form-control.error input {
        border-color: var(--error-color);
      }
      
      .form-control small {
        color: var(--error-color);
        position: absolute;
        bottom: 0;
        left: 0;
        visibility: hidden;
      }
      
      .form-control.error small {
        visibility: visible;
      }
      
      .form button {
        cursor: pointer;
        background-color: #3498db;
        border: 2px solid #3498db;
        border-radius: 4px;
        color: #fff;
        display: block;
        font-size: 16px;
        padding: 10px;
        margin-top: 20px;
        width: 100%;
      }</style>
    <title>Form Validator</title>
</head>
<body>
    <div class="container">
        <form id="form" class="form" method="post">
            <h2>Reset Your Password</h2>
            <div class="form-control">
                <label for="password">new password</label>
                <input type="password" , id="password" , name="password" , placeholder="Enter password">
                <small>Error Message</small>
            </div>
            <div class="form-control">
                <label for="password_confirm">Confirm newpassword</label>
                <input type="password" , name="Password Confirm" , id="password_confirm" ,
                    placeholder="Enter password again">
                <small>Error Message</small>
            </div>
            <button type="submit">Submit</button>
        </form>
    </div>
</body>
<script >const form = document.getElementById('form');
    const password = document.getElementById('password');
    const password_confirm = document.getElementById('password_confirm');
    
    
    
    // Error outline and Message
    function showError(input, message) {
        // Accesssing the username div;
        const formControl = input.parentElement;
        // Changing the class
        formControl.className = 'form-control error';
        // Displaying the error message using small tag
        const small = formControl.querySelector('small');
        small.textContent = message;
    }
    
    // Success outline and Message.
    function showSuccess(input) {
        // Accesssing the username div;
        const formControl = input.parentElement;
        // Changing the class
        formControl.className = 'form-control success';
    }
    
    // Checking if entered i/p isn't empty
    function checkRequired(inputArr) {
        inputArr.forEach(cur => {
            // console.log(cur.value);
            if (cur.value.trim() === '') {
                showError(cur, `${cur.name} is required`)
            }
        });
    }
    
    // Checking the length of entered input.
    function checkLength(input, min, max) {
        if (input.value.length < min) {
            showError(input, `${input.name} must be atleast ${min}`);
        } else if (input.value.length > max) {
            showError(input, `${input.name} must be less than ${max}`);
        } else {
            showSuccess(input);
        }
    }
    
    // Checking if email is valid.
    function checkEmail(input) {
        const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        if (re.test(input.value.trim())) {
            showSuccess(input);
        } else {
            showError(input, 'Email is not valid');
        }
    }
    
    //Check password match
    function checkPasswordMatch(pass1, pass2) {
        if (pass1.value !== pass2.value) {
            showError(pass2, "Password do not match.");
        }
    }
    
    // Event Listeners
    form.addEventListener('submit', e => {
        e.preventDefault();
        // console.log(username.value);
        checkRequired([username, email, password, password_confirm]);
        checkLength(username, 3, 20);
        checkLength(password, 8, 25);
        checkEmail(email);
        checkPasswordMatch(password, password_confirm);
    });</script>
</html> -->
<!DOCTYPE html>
<html>
<style>#text {display:none;color:red}
</style>
<head>
    <script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
    <meta name="viewport" content="width=device-wdith" ,initial-scale=1.0>
    <title>Reset Password</title>
    <link rel="stylesheet" href="../CSS/webpr.css">
    <link rel="stylesheet" href="../CSS/webpr.css">
</head>

<body>
    <%- include ("./partials/header.ejs") %>
    <div class="containerTlogin">
        <div class="form-boxT">
            <h1 id="titleT">Reset Password</h1>
            <form id="register-form" role="form" class="form" method="post">
                <div class="input-groupT">

                    <div class="input-fieldT">
                        <i class="fa-solid fa-envelope"></i>
                        <input type="password" name="newPassword" placeholder="new Password" required>
                      </div>
  
                        <div class="btn-fieldT">
                    
                  <button type="submit" id="submitT">Submit</button>
                </div>
                </form>
        </div>
    </div>
    <script>
        var input = document.getElementById("myInput");
        var text = document.getElementById("text");
        input.addEventListener("keyup", function(event) {
        if (event.getModifierState("CapsLock")) {
            text.style.display = "block";
          } else {
            text.style.display = "none"
          }
        });
          
        </script>
         <%- include ("./partials/footer.ejs") %>
</body>

</html>
